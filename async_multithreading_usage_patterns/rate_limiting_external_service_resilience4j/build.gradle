buildscript {
    var fileReader = new FileReader(file('../../gradle.properties'))
    new BufferedReader(fileReader)
            .withCloseable { reader ->
                String line
                while ((line = reader.readLine()) != null) {
                    println(line)
                    var name = line.substring(0, line.indexOf('='))
                    var value = line.substring(line.indexOf('=') + 1)
                    project.ext.set(name, value)
                }
            }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id "com.github.ben-manes.versions" version "${benManesDependencyVersion}"
}

group = "${buildGroup}"
version = "${buildVersion}"

java {
    sourceCompatibility = "${javaVersion}"
}

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jSpringBoot3Version}"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
